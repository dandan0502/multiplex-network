bugid,product,component,abstract,des_com
228057,GMF-Runtime,General,[Printing] Print preview should take into account fit to page settings,"The print preview should take into account fit to page options when invoked from the print dialog.++Created attachment 96895  [details] preview fit to page settingscan be applied after [227796].++A combined patch was added to 227373 that nullifies the patch already attached here.++(In reply to comment #2 ) > This is a combined patch for [227006], [227796] and [228057] Committed to HEAD the combined patch for Bug 228057 , Bug 227796 , Bug 227006 and Bug 227373 .The commit comment is ""[227373] gmf-head jbruck 080424 [Printing] Combinedcommit for Bug 228057 , Bug 227796 , Bug 227006 and Bug 227373 ""++[target cleanup] 2.1 M7 was the original target milestone for this bug++[GMF Restructure] Bug 319140 : product GMF and componentRuntime was the original product and component for this bug"
228051,Dali JPA Tools,General,EclipseLink Customization Browse buttons do not work,"On the Eclipselink Customization tab the Session Customizer and descriptor Customizer Browse buttons do not open a type browser dialog.  Also, using code complete in the text fields does not work and throws a null pointer exception.++Fixed and checked in."
228050,Dali JPA Tools,General,eclipseLink persistence.xml support persistence.tools.weaving.fetchgroups,"Add support to the EclipseLink Persistence.xml editor for the persistence.tools.weaving.fetchgroups property.++only the UI support is missing, model is there++checked in a fix to head for M7++verified in WTP 3.0RC3"
287149,Platform,SWT,[Widgets] FileDialog can not open a directory correctly on linux gtk swt,"Build ID: I20090611-1540Steps To Reproduce:1. write a swt example on linux platform with code like this		FileDialog fileDialog=new FileDialog(Display.getDefault().getActiveShell(),SWT.OPEN);		fileDialog.setFileName(""/tmp"");		fileDialog.open();2. run this example ,you will see File dialog opened and select ""tmp"" directory . BUT NOT GO INTO THE TMP directory. More information:checked windows , its ok.I am using gtk32 bit linux, gtk 64bit not checked, gtk 64 may have same problem.root cause is:line 534  of FileDialog.java always invoke OS.gtk_file_chooser_set_filename(..)  and don't consider if it is a file or directory.Solution can be:replace line 534 with following if(fileName.isEmpty()){OS.gtk_file_chooser_set_current_folder(..);}else{OS.gtk_file_chooser_set_filename(..) ;}++ Bug 81604  https://bugs.eclipse.org/bugs/show_bug.cgi?id=81604 is somehow related to this bug.++The example code should be:                  FileDialog fileDialog=new  FileDialog(Display.getDefault().getActiveShell(),SWT.OPEN);                  fileDialog.setFilterPath(""/tmp"");                  fileDialog.open();(In reply to comment #0 ) > Build ID: I20090611-1540> > Steps To Reproduce:> 1. write a swt example on linux platform with code like this> >                 FileDialog fileDialog=new> FileDialog(Display.getDefault().getActiveShell(),SWT.OPEN);>                 fileDialog.setFileName(""/tmp"");>                 fileDialog.open();> 2. run this example ,you will see File dialog opened and select ""tmp"" directory> . BUT NOT GO INTO THE TMP directory.> > > > > > More information:> checked windows , its ok.> I am using gtk32 bit linux, gtk 64bit not checked, gtk 64 may have same> problem.> > root cause is:> line 534  of FileDialog.java always invoke > OS.gtk_file_chooser_set_filename(..)  and don't consider if it is a file or> directory.> Solution can be:> replace line 534 with following > > if(fileName.isEmpty()){> OS.gtk_file_chooser_set_current_folder(..);> }else{> OS.gtk_file_chooser_set_filename(..) ;> }> ++I checked this on Win32 and Cocoa, and they do all go into the tmp dir. I'll fix this...++Fixed in HEAD > 20090824++Would it be possible to provide this fix within a 3.5 build?This bug seems to produce serious problems, when a large amount of user homes are located within the same root directory! When the parent directory is huge, then ""Open file"" may take ages.For large companies this fix might be very important to be available as soon as possible! Would be very appreciated!++It is too late for 3.5.1, but we should invesigate adding it to 3.5.2.++Yes, please have this backported to 3.5.2 -- should I open a bug for the backport?++Sure, you can open a bug, assign it to me and put the target milestone to 3.5.2. Thanks!++*** Bug 281986 has been marked as a duplicate of this bug. ***"
89371,MDT.UML2,Core,"Element#setValue(Stereotype, String, Object) should convert string values","Element#setValue(Stereotype, String, Object) does not currently convert stringvalues to the appropriate data type for the stereotype property.There is no easy alternative way for a caller to discover the expected data type.++The enhancement has been committed to CVS.++This enhancement is available in build I200503311223.++Move to verified as per bug 206558 ."
89374,Platform,UI,[WorkbenchParts] partVisible not sent when editor restored,"I20050209In bug 85005 , Tom says: > When quering the workbench page whether A.java is visible, it returns false.> When activating A.java, an IPartListener2 will receive a partActivated event> for A.java, but not a partVisible event. When an editor becomes visible, it should always fire a partVisible event.It should not matter whether the editor is being lazily materialized or not.++This appears to be working correctly. Here's the sequence of events fired fromthe IWorkbenchPage to its IPartListener2 list on startup:(In my workspace, A.java -> Ess.java, B.java -> asdfwaef.java, and C.java ->Fee321.java). Paste this into a text editor with longer lines for easierreadability.org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace,partOpened(Ess.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace,partVisible(Ess.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace,partOpened(asdfwaef.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace,partOpened(Fee321.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace,partVisible(Fee321.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace,partVisible(asdfwaef.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace,partHidden(Ess.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace -Resource, partOpened(Navigator - org.eclipse.ui.views.ResourceNavigator)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace -Resource, partVisible(Navigator - org.eclipse.ui.views.ResourceNavigator)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace -Resource, partOpened(Outline - org.eclipse.ui.views.ContentOutline)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace -Resource, partVisible(Outline - org.eclipse.ui.views.ContentOutline)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace -Resource, partOpened(Tasks - org.eclipse.ui.views.TaskList)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace -Resource, partVisible(Tasks - org.eclipse.ui.views.TaskList)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace -Resource, partActivated(Fee321.java - org.eclipse.jdt.ui.CompilationUnitEditor)After clicking on the first (hidden) editor's tab, here's the sequence of eventsfired:org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace -Resource, partVisible(Ess.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace -Resource, partHidden(asdfwaef.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace -Resource, partActivated(Fee321.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchPage.IPartListener2 page Workspace -Resource, partActivated(Ess.java - org.eclipse.jdt.ui.CompilationUnitEditor)There is clearly redundant activation happening, but all of the IPartListener2events seem to be fired correctly.++Note: my test code had a bug in the last message... the second-lastpartActivated should have been a partDeactivated.++It appears that the partVisible notification is being sent from workbench page,but not from workbench window. Reopening.++Monitoring listeners from IWorkbenchWindow, I get the following event order:org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partOpened(Ess.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partOpened(asdfwaef.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partOpened(Fee321.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partActivated(asdfwaef.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partOpened(Navigator - org.eclipse.ui.views.ResourceNavigator)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partVisible(Navigator - org.eclipse.ui.views.ResourceNavigator)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partOpened(Outline - org.eclipse.ui.views.ContentOutline)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partVisible(Outline - org.eclipse.ui.views.ContentOutline)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partOpened(Tasks - org.eclipse.ui.views.TaskList)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partVisible(Tasks - org.eclipse.ui.views.TaskList)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partActivated(asdfwaef.java - org.eclipse.jdt.ui.CompilationUnitEditor)After clicking on the hidden tab, I get:org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partVisible(Ess.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partHidden(asdfwaef.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partDectivated(asdfwaef.java - org.eclipse.jdt.ui.CompilationUnitEditor)org.eclipse.ui/listeners/IWorkbenchWindow.IPartListener2 window 214,partActivated(Ess.java - org.eclipse.jdt.ui.CompilationUnitEditor)...apparently, no partVisible events are being sent from IWorkbenchPage on startup.++That should have read ""no partVisible events are being sent fromIWorkbenchWindow on startup"".... IWorkbenchPage is working fine.++Created attachment 19299  [details] Workbench patchFixes this bug, and adds additional trace options to assist with verificationof this and future event-ordering bugs.++Created attachment 19300  [details] patch for o.e.uiUpdates the .options file to reflect the new tracing options++Fixed in head++Verified in I20050510-0010"
89378,Platform,SWT,Combo default size too small with certain fonts,"I'm using some non-editable Combos with a list of pre-set strings to select from, and I want it to stretch to accomodate the longest string inside the list. This works fine except when I switch to a certain font in Japanese - MS UI Gothic. And it doesn't seem to be a Japanese thing, if I use another font, it works. It seems to be computing the size incorrectly. I've noticed this in our UI, and I can also find some instances in some preference pages where they do the same thing. See screenshots to follow.++Created attachment 19280  [details] screenshot++Can you confirm that this is still failing in the 3.1 stream?  I seem to remember fixing something in this area.++Better, can you provide a snippet that fails under 3.0.1?  Thanks.++Try the following, it will work fine, but switch to MS UI Gothic font (you might have to install some asian language packs), and the last a is partially truncated. I also tried using m5a, and got the same result.---------import org.eclipse.swt.SWT;import org.eclipse.swt.layout.GridLayout;import org.eclipse.swt.widgets.Combo;import org.eclipse.swt.widgets.Display;import org.eclipse.swt.widgets.Shell;public class Test {public static void main (String [] args) {	Display display = new Display ();	Shell shell = new Shell(display);	shell.setLayout(new GridLayout());		Combo c = new Combo(shell, SWT.READ_ONLY);	c.add(""aaa"");	c.select(0);		shell.open ();	while (!shell.isDisposed ()) {		if (!display.readAndDispatch ()) display.sleep ();	}	display.dispose ();}}++FH, can you try this on your machine?++*** Bug 63646 has been marked as a duplicate of this bug. ***++fixed in head > 20050408++*** Bug 75003 has been marked as a duplicate of this bug. ***++Verified in I20050420-1200. Closing bug.++*** Bug 96091 has been marked as a duplicate of this bug. ***++*** Bug 39463 has been marked as a duplicate of this bug. ***++*** Bug 131263 has been marked as a duplicate of this bug. ***"
256902,PDE,API Tools,Cascading failures in build N20081127-2000,"1632 failures on two machines using this build.++I am investigating.++Released in HEAD.I'll monitor the next nightly build.Michael, please verify. You might just wait for the next nightly build since it is quite painful to set up the test harness.++verified"
256900,Platform,Resources,preferences are not updated when a settings (*.pref) file is pasted,"Build 3.5M3I noticed that org.eclipse.jdt.compiler.tool project had no cleanup settings.I wanted to add 'unqualified access to field' cleanup.I went to JDT/Core, copied the file .settings/org.eclipse.jdt.ui.prefs to JDT/Compiler/Tool,and reopened the cleanup pref page.Still it did not show custom project settings.In order to fix this, I had to:1. check the box saying ""custom project setting""2. give it a name and press apply/ok3. copy contents from JDT/Core UI prefs file into the newly created JDT/Compiler/Tools UI prefs file.4. close and reopen JDT/Compiler/Tool projectJDT/Core settings do respond to pref store changes.Note that such a change could be triggered from a CVS update.++>I went to JDT/Core, copied the file .settings/org.eclipse.jdt.ui.prefs to JDT/Compiler/Tool,and reopened the cleanup pref page.You need to refresh the project whenever you change it outside of eclipse. After a refresh it works as expected for me.4. close and reopen JDT/Compiler/Tool projectWell, that's a refresh as well;-)++I had done all the changes from within the IDE. Copy/paste were performed via pkg explorer, and text editor.++(In reply to comment #2 ) > I had done all the changes from within the IDE. Copy/paste were performed via> pkg explorer, and text editor.> Ok, then I'm sorry. I guess it's a bug.Steps:1. Create project P012. Set project specific compiler warning and clean up settings for P013. Create project P024. Copy .settings folder from P01 to P025. Open properties for P02Is: P02 does not have project settingsShould: P02 should have the same project settings as P01Only workaround I found was to restart eclipse.Not sure if this is a bug/worked like this since day one. If it is a bug I guess it's a platform problem?++It works when the file is already there, modified and saved. Also deleting the prefs file updates the project settings but it looks like adding a new one does not update them.Same can be reproduced without JDT:1. Create project P12. Set project specific encoding on P13. Create project P24. Copy .settings folder from P1 to P2   NOTE: some bug if the .settings folder is already there and only the file gets         copied5. Open properties for P2==> still has old encoding++Created attachment 147785  [details] Fix v01++Released to HEAD."
256905,Equinox,p2,[tests] Abuse of Sytem.out.println,"When I run the automated tests I get a barage of useless junk printed out to the console and as a result it's very easy to miss important problems like exceptions getting thrown and genuine errors that are indicitive of problems butdon't cause a test to fail. We should clean this up.The two worst offenders are:1) The jar verifier tests that print out countless messages like:Verifying org.eclipse.equinox.p2.artifact.repository_1.0.100.v20081024.jar:  STDOUT: jar verified.STDOUT: STDOUT: Warning: STDOUT: This jar contains entries whose signer certificate will expire within six months. STDOUT: STDOUT: Re-run with the -verbose and -certs options for more details.2) The mirroring tests with emssage like:Mirroring: helloworldfeature/org.eclipse.update.feature/1.0.0 (Descriptor: canonical: helloworldfeature/org.eclipse.update.feature/1.0.0)Mirroring: yetanotherfeature/org.eclipse.update.feature/1.0.0 (Descriptor: canonical: yetanotherfeature/org.eclipse.update.feature/1.0.0)Artifact: canonical: helloworld/osgi.bundle/1.0.0 already exists in repository: file:/C:/workspaces/junit-workspace/1227886938015-0.8651159694093722/BasicMirrorApplicationTest/.Artifact: canonical: helloworldfeature/org.eclipse.update.feature/1.0.0 already exists in repository: file:/C:/workspaces/junit-workspace/1227886938015-0.8651159694093722/BasicMirrorApplicationTest/.++I'm not sure if there is a way to suppress the messages from the mirror tests since they just call the application which is simulating calling the app from the command-line. (and prints messages back to the user)++Tests can redirect the output streams before running other code, see org.eclipse.pde.build.tests/ProductTests.testBug238001 as an example++Ah cool... didn't know that! Here is the block of code for those who don't have pde.build.tests checked out in their workspace:PrintStream oldErr = System.err;PrintStream newErr = new PrintStream(new FileOutputStream(buildFolder.getLocation().toOSString() + ""/out.out""));System.setErr(newErr);IconExe.main(new String[] {win32File.getLocation().toOSString(), icoFile.getLocation().toOSString()});IconExe.main(new String[] {win64File.getLocation().toOSString(), icoFile.getLocation().toOSString()});System.setErr(oldErr);newErr.close();++I have fixed JarProcessorTests to not spew to sysout.++For the mirror app tests, perhaps we could put code in the #run method. Maybe something like:PrintStream oldErr = System.err;PrintStream oldOut = System.out;PrintStream newErr = new PrintStream(...);PrintStream newOut = new PrintStream(...);try {   app.start(context);} finally {   System.setOut(oldOut);   System.setErr(oldErr);   newErr.close();   newOut.close();}++Created attachment 119904  [details] Disables verbose logging for Mirror Application TestsI just removed the -verbose argument from all tests except testCompareUsingMD5Comparator and testBaselineCompareUsingMD5Comparator. These are the only tests that need verbose logging, so I just reassigned stdout as per DJ's suggestion (I was reassigning stderr anyway)Only affects the Artifact Repository Mirror Application.++Thanks Andrew. I've committed to HEAD with a tiny tweak on the file names for sys out and err."
